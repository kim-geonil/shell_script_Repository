# ========================================
# NCU Script Generator - Auto Generated Script
# ========================================
#
# Script ID: detect_1c19dfdd-8ac8-4a09-9ff7-e4b765a16f61
# Generated: 2025-10-17T04:28:50.147Z
# Asset Type: OS
# Script Type: OS-Linux
# Target Product: 보안 점검 대상
# Generated By: NCU Script Generator User
#
# File Information:
# - File Name: OS--보안-점검-대상--OSLinux-unknown-process.sh
# - Time-based Folder: 2025-10-17-13h
# - Full Path: /2025-10-17-13h/OS--보안-점검-대상--OSLinux-unknown-process.sh
#
# Configuration:
# - Target OS: Linux
# - Process Name: unknown-process
# - Config Path: /etc/default/config
# - Account Name: default-account
# - Output Format: bash
#
# Test Results:
# - Status: FAILED
# - Success Rate: 0%
# - Summary: [object Object]
#
# Pass Condition: Script executed successfully
# Fail Condition: Script execution failed
#
# ========================================

```bash
#!/bin/bash

# === /etc/shadow 소유자·권한 점검 스크립트 ===
# 스크립트 ID: U-08
# 생성 시간: $(date)
# 설정값 요약: /etc/shadow 경로: /etc/shadow, 권한 허용값: 600, 640, 허용 소유자:그룹: root:root

# 점검할 파일 경로
FILE="/etc/shadow"

# 결과 변수 초기화
RESULT="Good"
ISSUE_COUNT=0
RECOMMENDATIONS=""

# 파일 존재 여부 점검
if [ ! -e "$FILE" ]; then
    echo "=== /etc/shadow 소유자·권한 점검 결과 ==="
    echo "점검 시간: $(date)"
    echo "설정 적용: [주요 설정값들 요약]"
    echo "1. 파일 존재 여부"
    echo "[FAIL] /etc/shadow 파일이 존재하지 않습니다."
    echo "=== 점검 결과 요약 ==="
    echo "전체 평가: Vulnerable"
    echo "발견된 문제: 1개"
    echo "권장 조치사항: /etc/shadow 파일이 존재해야 합니다."
    exit 1
fi

# 파일 소유자 및 그룹 점검
OWNER=$(stat -c %U "$FILE")
GROUP=$(stat -c %G "$FILE")

if [ "$OWNER" != "root" ] || [ "$GROUP" != "root" ]; then
    echo "1. 소유자 및 그룹 점검"
    echo "[FAIL] 소유자: $OWNER, 그룹: $GROUP (허용값: root:root)"
    RESULT="Vulnerable"
    ISSUE_COUNT=$((ISSUE_COUNT + 1))
    RECOMMENDATIONS+="소유자와 그룹을 root:root로 변경해야 합니다. "
else
    echo "1. 소유자 및 그룹 점검"
    echo "[PASS] 소유자 및 그룹이 올바릅니다."
fi

# 파일 권한 점검
PERMISSIONS=$(stat -c %a "$FILE")

if [[ "$PERMISSIONS" != "600" && "$PERMISSIONS" != "640" ]]; then
    echo "2. 파일 권한 점검"
    echo "[FAIL] 현재 권한: $PERMISSIONS (허용값: 600, 640)"
    RESULT="Vulnerable"
    ISSUE_COUNT=$((ISSUE_COUNT + 1))
    RECOMMENDATIONS+="파일 권한을 600 또는 640으로 변경해야 합니다. "
else
    echo "2. 파일 권한 점검"
    echo "[PASS] 파일 권한이 올바릅니다."
fi

# 점검 결과 요약 출력
echo "=== 점검 결과 요약 ==="
echo "전체 평가: $RESULT"
echo "발견된 문제: $ISSUE_COUNT 개"
if [ $ISSUE_COUNT -gt 0 ]; then
    echo "권장 조치사항: $RECOMMENDATIONS"
else
    echo "권장 조치사항: 없음"
fi
```