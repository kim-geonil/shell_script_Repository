# ========================================
# NCU Script Generator - Auto Generated Script
# ========================================
#
# Script ID: detect_35de5434-18cc-406e-9856-155c41aa5024
# Generated: 2025-10-13T01:06:06.657Z
# Asset Type: OS
# Script Type: OS-Linux
# Target Product: 보안 점검 대상
# Generated By: NCU Script Generator User
#
# File Information:
# - File Name: OS--보안-점검-대상--OSLinux-unknown-process.sh
# - Time-based Folder: 2025-10-13-10h
# - Full Path: /2025-10-13-10h/OS--보안-점검-대상--OSLinux-unknown-process.sh
#
# Configuration:
# - Target OS: Linux
# - Process Name: unknown-process
# - Config Path: /etc/default/config
# - Account Name: default-account
# - Output Format: bash
#
# Test Results:
# - Status: FAILED
# - Success Rate: 0%
# - Summary: [object Object]
#
# Pass Condition: Script executed successfully
# Fail Condition: Script execution failed
#
# ========================================

```bash
#!/bin/bash

# === (x)inetd 설정 파일 보호 점검 스크립트 ===
# 스크립트 ID: U-10
# 생성 시간: $(date)
# 설정값 요약:
# - inetd/xinetd 파일 경로: /etc/inetd.conf, /etc/xinetd.conf
# - xinetd.d 디렉터리 경로: /etc/xinetd.d
# - 파일 권한 허용값: 644, 600
# - xinetd.d 디렉터리 권한: 755
# - 허용 소유자:그룹: root:root

# 점검 결과 변수 초기화
result=0
issues=0
report=""

# 점검 함수 정의
check_file_permissions() {
    local file=$1
    local expected_permissions=$2
    local expected_owner=$3

    if [[ -e $file ]]; then
        # 파일 권한 점검
        actual_permissions=$(stat -c "%a" "$file")
        actual_owner=$(stat -c "%U:%G" "$file")

        if [[ $actual_permissions -eq $expected_permissions && $actual_owner == $expected_owner ]]; then
            report+="$(basename $file): [PASS] 권한 및 소유자 일치\n"
        else
            report+="$(basename $file): [FAIL] 권한 또는 소유자 불일치 (현재: $actual_permissions, $actual_owner)\n"
            ((issues++))
            result=1
        fi
    else
        report+="$(basename $file): [FAIL] 파일이 존재하지 않음\n"
        ((issues++))
        result=1
    fi
}

# xinetd.d 디렉터리 권한 점검
check_directory_permissions() {
    local dir=$1
    local expected_permissions=$2
    local expected_owner=$3

    if [[ -d $dir ]]; then
        actual_permissions=$(stat -c "%a" "$dir")
        actual_owner=$(stat -c "%U:%G" "$dir")

        if [[ $actual_permissions -eq $expected_permissions && $actual_owner == $expected_owner ]]; then
            report+="$(basename $dir): [PASS] 권한 및 소유자 일치\n"
        else
            report+="$(basename $dir): [FAIL] 권한 또는 소유자 불일치 (현재: $actual_permissions, $actual_owner)\n"
            ((issues++))
            result=1
        fi
    else
        report+="$(basename $dir): [FAIL] 디렉터리가 존재하지 않음\n"
        ((issues++))
        result=1
    fi
}

# 점검 수행
check_file_permissions "/etc/inetd.conf" 644 "root:root"
check_file_permissions "/etc/xinetd.conf" 644 "root:root"
check_directory_permissions "/etc/xinetd.d" 755 "root:root"

# 결과 출력
echo -e "=== (x)inetd 설정 파일 보호 점검 결과 ==="
echo -e "점검 시간: $(date)"
echo -e "설정 적용: [inetd/xinetd 파일 경로, xinetd.d 디렉터리 경로, 파일 및 디렉터리 권한]\n"

echo -e "$report"

# 점검 결과 요약
if [[ $result -eq 0 ]]; then
    echo -e "=== 점검 결과 요약 ==="
    echo -e "전체 평가: Good"
    echo -e "발견된 문제: 0개"
else
    echo -e "=== 점검 결과 요약 ==="
    echo -e "전체 평가: Vulnerable"
    echo -e "발견된 문제: $issues 개"
    echo -e "권장 조치사항: 파일 및 디렉터리 권한 및 소유자를 확인하고 수정하세요."
fi
```