# ========================================
# NCU Script Generator - Auto Generated Script
# ========================================
#
# Script ID: 7ce004cb-3fdf-485e-af9d-6c8df9edc27a_1760062436866
# Generated: 2025-10-10T02:13:57.605Z
# Asset Type: OS
# Script Type: OS-Linux
# Target Product: Unknown
# Generated By: NCU Script Generator User
#
# File Information:
# - File Name: OS--Unknown--OSLinux-unknown-process.sh
# - Time-based Folder: 2025-10-10-11h
# - Full Path: /2025-10-10-11h/OS--Unknown--OSLinux-unknown-process.sh
#
# Configuration:
# - Target OS: Linux
# - Process Name: unknown-process
# - Config Path: /etc/default/config
# - Account Name: default-account
# - Output Format: bash
#
# Test Results:
# - Status: FAILED
# - Success Rate: 0%
# - Summary: [object Object]
#
# Pass Condition: Script executed successfully
# Fail Condition: Script execution failed
#
# ========================================

```bash
#!/bin/bash

# === /etc/hosts 소유자·권한 점검 스크립트 ===
# 스크립트 ID: U-09
# 카테고리: 파일보안
# 난이도: medium
# 위험도: medium
# 생성 시간: $(date)
# 설정 적용: /etc/hosts 경로=/etc/hosts, 권한 허용값=644, 허용 소유자:그룹=root:root

# 점검할 파일 경로
FILE_PATH="/etc/hosts"
# 허용되는 파일 권한
ALLOWED_PERMISSIONS="644"
# 허용되는 소유자와 그룹
ALLOWED_OWNER_GROUP="root:root"

# 점검 결과 초기화
overall_status="Good"
issues_found=0

# 파일 존재 여부 확인
if [ ! -e "$FILE_PATH" ]; then
  echo "=== /etc/hosts 소유자·권한 점검 결과 ==="
  echo "점검 시간: $(date)"
  echo "설정 적용: /etc/hosts 경로=$FILE_PATH, 권한 허용값=$ALLOWED_PERMISSIONS, 허용 소유자:그룹=$ALLOWED_OWNER_GROUP"
  echo
  echo "1. 파일 존재 여부"
  echo "   [FAIL] $FILE_PATH 파일이 존재하지 않습니다."
  echo
  echo "=== 점검 결과 요약 ==="
  echo "전체 평가: Vulnerable"
  echo "발견된 문제: 1개"
  echo "권장 조치사항: $FILE_PATH 파일이 존재하는지 확인하고 필요 시 생성하세요."
  exit 1
fi

# 파일 권한 점검
current_permissions=$(stat -c "%a" "$FILE_PATH")
if [ "$current_permissions" != "$ALLOWED_PERMISSIONS" ]; then
  echo "1. 파일 권한 점검"
  echo "   [FAIL] $FILE_PATH 파일의 권한이 $current_permissions 입니다. (허용: $ALLOWED_PERMISSIONS)"
  overall_status="Vulnerable"
  issues_found=$((issues_found + 1))
else
  echo "1. 파일 권한 점검"
  echo "   [PASS] $FILE_PATH 파일의 권한이 올바르게 설정되어 있습니다."
fi

# 파일 소유자 및 그룹 점검
current_owner_group=$(stat -c "%U:%G" "$FILE_PATH")
if [ "$current_owner_group" != "$ALLOWED_OWNER_GROUP" ]; then
  echo "2. 파일 소유자 및 그룹 점검"
  echo "   [FAIL] $FILE_PATH 파일의 소유자:그룹이 $current_owner_group 입니다. (허용: $ALLOWED_OWNER_GROUP)"
  overall_status="Vulnerable"
  issues_found=$((issues_found + 1))
else
  echo "2. 파일 소유자 및 그룹 점검"
  echo "   [PASS] $FILE_PATH 파일의 소유자:그룹이 올바르게 설정되어 있습니다."
fi

# 점검 결과 요약 출력
echo
echo "=== 점검 결과 요약 ==="
echo "전체 평가: $overall_status"
echo "발견된 문제: $issues_found 개"
if [ "$overall_status" == "Vulnerable" ]; then
  echo "권장 조치사항: 파일의 권한 및 소유자:그룹 설정을 점검하고 필요 시 수정하세요."
else
  echo "권장 조치사항: 모든 설정이 올바르게 구성되어 있습니다."
fi
```