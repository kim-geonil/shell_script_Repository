# ========================================
# NCU Script Generator - Auto Generated Script
# ========================================
#
# Script ID: detect_7c2bcedf-1aa0-4c22-9b52-42218c4f1b7d
# Generated: 2025-10-10T02:29:23.789Z
# Asset Type: OS
# Script Type: OS-Linux
# Target Product: Unknown
# Generated By: NCU Script Generator User
#
# File Information:
# - File Name: OS--Unknown--OSLinux-unknown-process.sh
# - Time-based Folder: 2025-10-10-11h
# - Full Path: /2025-10-10-11h/OS--Unknown--OSLinux-unknown-process.sh
#
# Configuration:
# - Target OS: Linux
# - Process Name: unknown-process
# - Config Path: /etc/default/config
# - Account Name: default-account
# - Output Format: bash
#
# Test Results:
# - Status: FAILED
# - Success Rate: 0%
# - Summary: [object Object]
#
# Pass Condition: Script executed successfully
# Fail Condition: Script execution failed
#
# ========================================

```bash
#!/bin/bash

# === Root 디렉토리 보안 설정 점검 스크립트 ===
# 스크립트 ID: U-05
# 카테고리: 파일보안
# 난이도: medium
# 위험도: medium
# 생성 시간: $(date)
# 설정 적용: 허용 가능한 Root 홈 디렉토리 권한: 700, 750
# PATH에서 현재 디렉토리(.) 검사: 활성화
# 검사할 Shell 설정 파일: /root/.bashrc, /root/.profile

# === 점검 로직 ===

# 1. Root 홈 디렉토리 권한 점검
check_root_home_permissions() {
    local root_home_permissions
    root_home_permissions=$(stat -c "%a" /root)

    echo "1. Root 홈 디렉토리 권한 점검"
    if [[ "$root_home_permissions" == "700" || "$root_home_permissions" == "750" ]]; then
        echo "   [PASS] Root 홈 디렉토리 권한이 적절합니다: $root_home_permissions"
    else
        echo "   [FAIL] Root 홈 디렉토리 권한이 부적절합니다: $root_home_permissions"
    fi
}

# 2. PATH 환경 변수에서 현재 디렉토리(.) 포함 여부 점검
check_path_for_dot() {
    echo "2. PATH 환경 변수에서 현재 디렉토리(.) 포함 여부 점검"
    if echo "$PATH" | grep -qE '(^|:)\.:($|:)' ; then
        echo "   [FAIL] PATH에 현재 디렉토리(.)가 포함되어 있습니다."
    else
        echo "   [PASS] PATH에 현재 디렉토리(.)가 포함되어 있지 않습니다."
    fi
}

# 3. Shell 설정 파일 점검
check_shell_config_files() {
    local files=("/root/.bashrc" "/root/.profile")
    echo "3. Shell 설정 파일 점검"
    for file in "${files[@]}"; do
        if [[ -f "$file" ]]; then
            echo "   [PASS] $file 파일이 존재합니다."
        else
            echo "   [FAIL] $file 파일이 존재하지 않습니다."
        fi
    done
}

# === 결과 리포트 ===
echo "=== Root 디렉토리 보안 설정 점검 결과 ==="
echo "점검 시간: $(date)"
echo "설정 적용: 허용 가능한 Root 홈 디렉토리 권한: 700, 750"

check_root_home_permissions
check_path_for_dot
check_shell_config_files

# === 점검 결과 요약 ===
echo "=== 점검 결과 요약 ==="
# 점검 결과 요약을 위해 PASS/FAIL 상태를 종합적으로 평가
total_failures=$(grep -c "\[FAIL\]" <<< "$(check_root_home_permissions; check_path_for_dot; check_shell_config_files)")

if [[ "$total_failures" -eq 0 ]]; then
    echo "전체 평가: Good"
    echo "발견된 문제: 0개"
    echo "권장 조치사항: 모든 설정이 적절합니다."
else
    echo "전체 평가: Vulnerable"
    echo "발견된 문제: $total_failures개"
    echo "권장 조치사항: 위의 FAIL 항목을 확인하고 적절한 조치를 취하세요."
fi
```