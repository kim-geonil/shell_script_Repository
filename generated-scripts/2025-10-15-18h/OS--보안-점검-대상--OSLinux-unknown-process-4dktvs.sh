# ========================================
# NCU Script Generator - Auto Generated Script
# ========================================
#
# Script ID: detect_9df7e22c-d8fb-4865-b2a1-22df63139c05
# Generated: 2025-10-15T09:11:12.740Z
# Asset Type: OS
# Script Type: OS-Linux
# Target Product: 보안 점검 대상
# Generated By: NCU Script Generator User
#
# File Information:
# - File Name: OS--보안-점검-대상--OSLinux-unknown-process.sh
# - Time-based Folder: 2025-10-15-18h
# - Full Path: /2025-10-15-18h/OS--보안-점검-대상--OSLinux-unknown-process.sh
#
# Configuration:
# - Target OS: Linux
# - Process Name: unknown-process
# - Config Path: /etc/default/config
# - Account Name: default-account
# - Output Format: bash
#
# Test Results:
# - Status: FAILED
# - Success Rate: 0%
# - Summary: [object Object]
#
# Pass Condition: Script executed successfully
# Fail Condition: Script execution failed
#
# ========================================

```bash
#!/bin/bash

# === Root 디렉토리 보안 설정 점검 스크립트 ===
# 스크립트 ID: U-05
# 생성 시간: $(date)
# 설정값 요약:
# - 허용 가능한 Root 홈 디렉토리 권한: 700, 750
# - 현재 디렉토리(.) 검사: 활성화
# - 검사할 Shell 설정 파일: /root/.bashrc, /root/.profile

# 점검 결과 초기화
result="Good"
issue_count=0
recommendations=""

# 허용되는 권한 배열
allowed_permissions=(700 750)

# 함수: 권한 검사
check_permissions() {
    local dir="$1"
    local permissions=$(stat -c "%a" "$dir")

    # 허용된 권한인지 확인
    if [[ " ${allowed_permissions[@]} " =~ " ${permissions} " ]]; then
        echo "PASS: $dir의 권한($permissions)은 허용된 권한입니다."
    else
        echo "FAIL: $dir의 권한($permissions)은 허용되지 않는 권한입니다."
        result="Vulnerable"
        ((issue_count++))
        recommendations+="권한을 ${allowed_permissions[*]} 중 하나로 변경하십시오.\n"
    fi
}

# 함수: 파일 존재 여부 검사
check_file_exists() {
    local file="$1"
    if [[ -e "$file" ]]; then
        echo "PASS: $file 파일이 존재합니다."
    else
        echo "FAIL: $file 파일이 존재하지 않습니다."
        result="Vulnerable"
        ((issue_count++))
        recommendations+="파일 $file을 생성하십시오.\n"
    fi
}

# 현재 디렉토리 검사
if [[ ":$PATH:" == *":."* ]]; then
    echo "PASS: PATH에 현재 디렉토리(.)가 포함되어 있습니다."
else
    echo "FAIL: PATH에 현재 디렉토리(.)가 포함되어 있지 않습니다."
    result="Vulnerable"
    ((issue_count++))
    recommendations+="PATH에 현재 디렉토리(.)를 추가하십시오.\n"
fi

# 검사할 Shell 설정 파일 목록
files_to_check=("/root/.bashrc" "/root/.profile")

# 각 파일에 대해 존재 여부 및 권한 검사 수행
for file in "${files_to_check[@]}"; do
    check_file_exists "$file"
    check_permissions "$file"
done

# === 점검 결과 리포트 ===
echo
echo "=== Root 디렉토리 보안 설정 점검 결과 ==="
echo "점검 시간: $(date)"
echo "설정 적용: [허용 권한: ${allowed_permissions[*]}]"

# 점검 결과 출력
if [[ $result == "Good" ]]; then
    echo "전체 평가: Good"
else
    echo "전체 평가: Vulnerable"
    echo "발견된 문제: $issue_count 개"
    echo -e "권장 조치사항:\n$recommendations"
fi
```