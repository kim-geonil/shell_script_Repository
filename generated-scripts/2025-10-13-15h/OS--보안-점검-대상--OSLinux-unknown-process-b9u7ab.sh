# ========================================
# NCU Script Generator - Auto Generated Script
# ========================================
#
# Script ID: detect_65e72d87-dfc9-41de-8624-a1cc6305c576
# Generated: 2025-10-13T06:05:35.849Z
# Asset Type: OS
# Script Type: OS-Linux
# Target Product: 보안 점검 대상
# Generated By: NCU Script Generator User
#
# File Information:
# - File Name: OS--보안-점검-대상--OSLinux-unknown-process.sh
# - Time-based Folder: 2025-10-13-15h
# - Full Path: /2025-10-13-15h/OS--보안-점검-대상--OSLinux-unknown-process.sh
#
# Configuration:
# - Target OS: Linux
# - Process Name: unknown-process
# - Config Path: /etc/default/config
# - Account Name: default-account
# - Output Format: bash
#
# Test Results:
# - Status: FAILED
# - Success Rate: 0%
# - Summary: [object Object]
#
# Pass Condition: Script executed successfully
# Fail Condition: Script execution failed
#
# ========================================

```bash
#!/bin/bash

# === Root 디렉토리 보안 설정 점검 스크립트 ===
# 스크립트 ID: U-05
# 생성 시간: $(date)
# 설명: Root 디렉토리의 보안 설정을 점검하고 권장 사항을 제공합니다.

# 현재 디렉토리 확인
CURRENT_DIR=$(pwd)
if [ "$CURRENT_DIR" != "/" ]; then
    echo "현재 디렉토리는 Root 디렉토리가 아닙니다."
    exit 1
fi

# 리눅스 배포판 자동 감지
DISTRO=$(lsb_release -is 2>/dev/null || echo "Unknown")
echo "현재 리눅스 배포판: $DISTRO"

# 점검 결과 변수 초기화
RESULTS=()
ISSUES=0

# 1. 파일 권한 설정 점검
ROOT_PERMISSIONS=$(stat -c "%a" /)
if [[ "$ROOT_PERMISSIONS" == "700" || "$ROOT_PERMISSIONS" == "750" ]]; then
    RESULTS+=("Root 디렉토리 권한: $ROOT_PERMISSIONS [PASS]")
else
    RESULTS+=("Root 디렉토리 권한: $ROOT_PERMISSIONS [FAIL]")
    ISSUES=$((ISSUES + 1))
fi

# 2. 쉘 구성 파일 점검
for FILE in /root/.bashrc /root/.profile; do
    if [ -f "$FILE" ]; then
        PERMISSIONS=$(stat -c "%a" "$FILE")
        if [[ "$PERMISSIONS" == "600" || "$PERMISSIONS" == "644" ]]; then
            RESULTS+=("$FILE 권한: $PERMISSIONS [PASS]")
        else
            RESULTS+=("$FILE 권한: $PERMISSIONS [FAIL]")
            ISSUES=$((ISSUES + 1))
        fi
    else
        RESULTS+=("$FILE 파일이 존재하지 않음 [FAIL]")
        ISSUES=$((ISSUES + 1))
    fi
done

# 결과 출력
echo "=== Root 디렉토리 보안 설정 점검 결과 ==="
for RESULT in "${RESULTS[@]}"; do
    echo "$RESULT"
done

# 점검 결과 요약
if [ $ISSUES -eq 0 ]; then
    OVERALL_STATUS="Good"
else
    OVERALL_STATUS="Vulnerable"
fi

echo "=== 점검 결과 요약 ==="
echo "전체 평가: $OVERALL_STATUS"
echo "발견된 문제: $ISSUES개"
if [ $ISSUES -gt 0 ]; then
    echo "권장 조치사항: 권한 설정을 검토하고 필요한 경우 수정하십시오."
fi
```