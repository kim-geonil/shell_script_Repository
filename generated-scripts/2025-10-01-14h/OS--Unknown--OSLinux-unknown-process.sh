# ========================================
# NCU Script Generator - Auto Generated Script
# ========================================
#
# Script ID: script_1759297868245_tx12crujv
# Generated: 2025-10-01T05:51:09.435Z
# Asset Type: OS
# Script Type: OS-Linux
# Target Product: Unknown
# Generated By: NCU Script Generator User
#
# File Information:
# - File Name: OS--Unknown--OSLinux-unknown-process.sh
# - Time-based Folder: 2025-10-01-14h
# - Full Path: /2025-10-01-14h/OS--Unknown--OSLinux-unknown-process.sh
#
# Configuration:
# - Target OS: Linux
# - Process Name: unknown-process
# - Config Path: /etc/default/config
# - Account Name: default-account
# - Output Format: bash
#
# Test Results:
# - Status: FAILED
# - Success Rate: 0%
# - Summary: [object Object]
#
# Pass Condition: Script executed successfully
# Fail Condition: Script execution failed
#
# ========================================

```bash
#!/bin/bash

# === 파일/디렉터리 소유자 설정 점검 스크립트 ===
# ID: U-06
# 카테고리: 파일보안
# 난이도: medium
# 위험도: medium
# 생성 시간: $(date)
# 설정 적용: 중요 파일 목록 - /etc/passwd, /etc/shadow, /etc/group, 허용 소유자:그룹 - root:root

# 점검할 파일 목록
files=("/etc/passwd" "/etc/shadow" "/etc/group")
# 허용 소유자 및 그룹
allowed_owner="root"
allowed_group="root"

# 점검 결과 초기화
pass_count=0
fail_count=0

# === 점검 로직 ===
echo "=== 파일/디렉터리 소유자 설정 점검 결과 ==="
echo "점검 시간: $(date)"
echo "설정 적용: 중요 파일 목록 - ${files[*]}, 허용 소유자:그룹 - $allowed_owner:$allowed_group"
echo ""

# 각 파일에 대해 소유자 및 그룹 점검
for file in "${files[@]}"; do
    if [ -e "$file" ]; then
        # 파일의 소유자와 그룹을 가져옴
        owner=$(stat -c '%U' "$file")
        group=$(stat -c '%G' "$file")

        # 소유자 및 그룹이 허용된 값과 일치하는지 확인
        if [ "$owner" == "$allowed_owner" ] && [ "$group" == "$allowed_group" ]; then
            echo "1. [$file]"
            echo "   [PASS] 소유자 및 그룹이 올바르게 설정되어 있습니다."
            ((pass_count++))
        else
            echo "1. [$file]"
            echo "   [FAIL] 소유자 또는 그룹이 올바르지 않습니다. (현재: $owner:$group)"
            ((fail_count++))
        fi
    else
        echo "1. [$file]"
        echo "   [FAIL] 파일이 존재하지 않거나 접근 권한이 없습니다."
        ((fail_count++))
    fi
    echo ""
done

# === 점검 결과 요약 ===
echo "=== 점검 결과 요약 ==="
if [ "$fail_count" -eq 0 ]; then
    echo "전체 평가: Good"
else
    echo "전체 평가: Vulnerable"
fi
echo "발견된 문제: $fail_count 개"
if [ "$fail_count" -gt 0 ]; then
    echo "권장 조치사항: 파일의 소유자 및 그룹을 $allowed_owner:$allowed_group 로 설정하세요."
fi
```