# ========================================
# NCU Script Generator - Auto Generated Script
# ========================================
#
# Script ID: script_1758852112314_7hltn3xab
# Generated: 2025-09-26T02:01:52.606Z
# Script Type: OS-Linux
# Target Product: Unknown
# Generated By: NCU Script Generator User
#
# Configuration:
# - Target OS: 
# - Process Name: 
# - Config Path: 
# - Account Name: 
# - Output Format: bash
#
# Test Results:
# - Status: FAILED
# - Success Rate: 0%
# - Summary: [object Object]
#
# Pass Condition: 
# Fail Condition: 
#
# ========================================

```bash
#!/bin/bash
# U-34 DNS Zone Transfer 제한 점검 스크립트
# 생성 시간: $(date)
# 설정값 요약: named.conf 경로=/etc/named.conf, 허용 전송 호스트=없음

# 결과 저장 변수 초기화
declare -A results
results["1. DNS 서비스 설정 파일 존재 여부"]=""
results["2. named.conf 파일 권한 검사"]=""
results["3. Zone Transfer 설정 검증"]=""
vuln_count=0

# 헤더 섹션
echo "=== U-34 점검 결과 ==="
echo "점검 시간: $(date)"
echo "설정 적용:"
echo "  named.conf 경로: /etc/named.conf"
echo "  허용 전송 호스트: 지정되지 않음"
echo ""

# 1. DNS 서비스 설정 파일 존재 여부 검사
check_config_existence() {
    local conf_path="/etc/named.conf"
    if [ -f "$conf_path" ]; then
        results["1. DNS 서비스 설정 파일 존재 여부"]="[PASS] 설정 파일이 존재합니다: $conf_path"
    else
        results["1. DNS 서비스 설정 파일 존재 여부"]="[FAIL] DNS 설정 파일이 존재하지 않습니다"
        ((vuln_count++))
    fi
}

# 2. named.conf 파일 권한 검사
check_file_permission() {
    local conf_path="/etc/named.conf"
    local valid_perms=("600" "640" "644" "755")
    if [ -f "$conf_path" ]; then
        current_perm=$(stat -c %a "$conf_path")
        if [[ " ${valid_perms[@]} " =~ " ${current_perm} " ]]; then
            results["2. named.conf 파일 권한 검사"]="[PASS] 적절한 파일 권한: $current_perm"
        else
            results["2. named.conf 파일 권한 검사"]="[FAIL] 취약한 파일 권한: $current_perm"
            ((vuln_count++))
        fi
    fi
}

# 3. Zone Transfer 설정 검증
check_zone_transfer() {
    local conf_path="/etc/named.conf"
    local vulnerable=0
    
    if [ -f "$conf_path" ]; then
        # 주석 제거 후 zone 섹션 추출
        while read -r line; do
            if [[ $line =~ ^zone ]]; then
                in_zone=1
                zone_config=""
            elif [[ $in_zone -eq 1 && $line =~ }\; ]]; then
                in_zone=0
                if ! grep -q "allow-transfer" <<< "$zone_config"; then
                    vulnerable=1
                elif grep -q "allow-transfer.*{.*any;.*}" <<< "$zone_config"; then
                    vulnerable=1
                fi
            elif [[ $in_zone -eq 1 ]]; then
                zone_config+="$line"
            fi
        done < <(grep -v '^//' "$conf_path" | tr -d '\n' | sed 's/; */;\n/g')

        if [ $vulnerable -eq 0 ]; then
            results["3. Zone Transfer 설정 검증"]="[PASS] 적절한 Zone Transfer 제한 설정이 적용되었습니다"
        else
            results["3. Zone Transfer 설정 검증"]="[FAIL] Zone Transfer가 제한되지 않았거나 allow-transfer 설정이 없습니다"
            ((vuln_count++))
        fi
    fi
}

# 점검 실행
[ "$(id -u)" -ne 0 ] && echo "Root 권한이 필요합니다." && exit 1

check_config_existence
check_file_permission
check_zone_transfer

# 결과 리포트 출력
for key in "${!results[@]}"; do
    echo "$key"
    echo "   ${results[$key]}"
    echo ""
done

# 요약 섹션
echo "=== 점검 결과 요약 ==="
if [ $vuln_count -gt 0 ]; then
    echo "전체 평가: Vulnerable"
    echo "발견된 문제: $vuln_count개"
    echo "권장 조치사항:"
    echo "1. DNS 설정 파일에서 모든 zone 섹션에 allow-transfer 지시자를 추가하고"
    echo "2. 신뢰할 수 있는 네임서버 IP만 허용하도록 설정해야 합니다"
else
    echo "전체 평가: Good"
    echo "발견된 문제: 0개"
    echo "권장 조치사항: 현재 추가 조치가 필요하지 않습니다"
fi
```