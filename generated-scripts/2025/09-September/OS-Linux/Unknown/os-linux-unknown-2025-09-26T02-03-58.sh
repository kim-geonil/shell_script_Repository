# ========================================
# NCU Script Generator - Auto Generated Script
# ========================================
#
# Script ID: script_1758852238255_0wzzltzk9
# Generated: 2025-09-26T02:03:58.435Z
# Script Type: OS-Linux
# Target Product: Unknown
# Generated By: NCU Script Generator User
#
# Configuration:
# - Target OS: 
# - Process Name: 
# - Config Path: 
# - Account Name: 
# - Output Format: bash
#
# Test Results:
# - Status: FAILED
# - Success Rate: 0%
# - Summary: [object Object]
#
# Pass Condition: 
# Fail Condition: 
#
# ========================================

```bash
#!/bin/bash

# === U-31 점검 결과 ===
# 점검 시간: $(date)
# 설정 적용: [서비스 목록: , 파일 권한 허용값: 600, 640, 644, 755, 요구 상태: disabled]

# 점검할 서비스 목록 (사용자 설정 반영)
SERVICES=("service1" "service2" "service3") # 서비스 목록을 여기에 추가
ALLOWED_PERMISSIONS=("600" "640" "644" "755") # 허용된 파일 권한
REQUIRED_STATE="disabled" # 요구 상태

# 결과 변수 초기화
RESULTS=()
PROBLEMS=0

# 서비스 점검 로직
for SERVICE in "${SERVICES[@]}"; do
    # 서비스 상태 확인
    if systemctl is-active --quiet "$SERVICE"; then
        STATUS="active"
    else
        STATUS="inactive"
    fi

    # 서비스 비활성화 점검
    if [[ "$STATUS" == "active" ]]; then
        RESULTS+=("$SERVICE: [FAIL] 서비스가 활성화되어 있습니다.")
        PROBLEMS=$((PROBLEMS + 1))
    else
        RESULTS+=("$SERVICE: [PASS] 서비스가 비활성화되어 있습니다.")
    fi
done

# 파일 권한 점검 로직
for PERM in "${ALLOWED_PERMISSIONS[@]}"; do
    # 파일 권한 확인 (예: /etc/systemd/system/)
    if [ -d "/etc/systemd/system/" ]; then
        for FILE in /etc/systemd/system/*; do
            FILE_PERM=$(stat -c "%a" "$FILE")
            if [[ "$FILE_PERM" != "$PERM" ]]; then
                RESULTS+=("$FILE: [FAIL] 파일 권한이 $PERM가 아닙니다. 현재 권한: $FILE_PERM")
                PROBLEMS=$((PROBLEMS + 1))
            else
                RESULTS+=("$FILE: [PASS] 파일 권한이 $PERM로 설정되어 있습니다.")
            fi
        done
    else
        RESULTS+=("/etc/systemd/system/: [FAIL] 디렉토리가 존재하지 않습니다.")
        PROBLEMS=$((PROBLEMS + 1))
    fi
done

# 결과 리포트 출력
for RESULT in "${RESULTS[@]}"; do
    echo "$RESULT"
done

# === 점검 결과 요약 ===
if [ "$PROBLEMS" -eq 0 ]; then
    OVERALL_STATUS="Good"
else
    OVERALL_STATUS="Vulnerable"
fi

echo "전체 평가: $OVERALL_STATUS"
echo "발견된 문제: $PROBLEMS개"
echo "권장 조치사항: 비활성화해야 할 서비스가 활성화되어 있습니다."
```