# ========================================
# NCU Script Generator - Auto Generated Script
# ========================================
#
# Script ID: script_1759205243837_aa2bijnip
# Generated: 2025-09-30T04:07:24.006Z
# Script Type: OS-Linux
# Target Product: Unknown
# Generated By: NCU Script Generator User
#
# Configuration:
# - Target OS: 
# - Process Name: 
# - Config Path: 
# - Account Name: 
# - Output Format: bash
#
# Test Results:
# - Status: FAILED
# - Success Rate: 0%
# - Summary: [object Object]
#
# Pass Condition: 
# Fail Condition: 
#
# ========================================

```bash
#!/bin/bash

# === 파일/디렉터리 소유자 설정 점검 결과 ===
# 스크립트 ID: U-06
# 생성 시간: $(date)
# 설정 적용: 중요 파일 목록: /etc/passwd, /etc/shadow, /etc/group, 허용 소유자:그룹: root:root

# 점검할 파일 목록
files=("/etc/passwd" "/etc/shadow" "/etc/group")
# 허용된 소유자 및 그룹
allowed_owner="root"
allowed_group="root"

# 결과 변수 초기화
result=0
issue_count=0
declare -a issues

# 점검 로직
for file in "${files[@]}"; do
    # 파일 존재 여부 확인
    if [[ ! -e "$file" ]]; then
        issues+=("$file: 파일이 존재하지 않음")
        result=1
        ((issue_count++))
        continue
    fi

    # 파일 소유자 및 그룹 확인
    owner=$(stat -c '%U' "$file")
    group=$(stat -c '%G' "$file")

    if [[ "$owner" != "$allowed_owner" || "$group" != "$allowed_group" ]]; then
        issues+=("$file: 소유자 및 그룹이 올바르지 않음 (현재: $owner:$group, 허용: $allowed_owner:$allowed_group)")
        result=1
        ((issue_count++))
    fi
done

# 결과 리포트 출력
if [[ $result -eq 0 ]]; then
    echo "1. 모든 점검 항목이 PASS되었습니다."
else
    for issue in "${issues[@]}"; do
        echo "$issue"
    done
    echo "=== 점검 결과 요약 ==="
    echo "전체 평가: Vulnerable"
    echo "발견된 문제: $issue_count 개"
    echo "권장 조치사항: 소유자 및 그룹을 root:root로 변경하세요."
fi
```