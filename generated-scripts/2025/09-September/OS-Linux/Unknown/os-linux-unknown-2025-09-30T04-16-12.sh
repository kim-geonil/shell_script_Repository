# ========================================
# NCU Script Generator - Auto Generated Script
# ========================================
#
# Script ID: script_1759205772705_dg7gjxcyt
# Generated: 2025-09-30T04:16:12.833Z
# Script Type: OS-Linux
# Target Product: Unknown
# Generated By: NCU Script Generator User
#
# Configuration:
# - Target OS: 
# - Process Name: 
# - Config Path: 
# - Account Name: 
# - Output Format: bash
#
# Test Results:
# - Status: FAILED
# - Success Rate: 0%
# - Summary: [object Object]
#
# Pass Condition: 
# Fail Condition: 
#
# ========================================

```bash
#!/bin/bash

# === /etc/passwd 소유자·권한 점검 스크립트 ===
# 생성 시간: $(date)
# 설정값 요약: 권한 허용값 644, 소유자:그룹 root:root

# 점검할 파일 경로
FILE="/etc/passwd"
# 허용된 권한 및 소유자/그룹
ALLOWED_PERMISSIONS="644"
ALLOWED_OWNER="root"
ALLOWED_GROUP="root"

# 점검 결과 변수 초기화
RESULT="Good"
ISSUES=0

# 파일 존재 여부 확인
if [ ! -e "$FILE" ]; then
    echo "파일이 존재하지 않습니다: $FILE"
    exit 1
fi

# 파일 권한 점검
CURRENT_PERMISSIONS=$(stat -c "%a" "$FILE")
if [ "$CURRENT_PERMISSIONS" -ne "$ALLOWED_PERMISSIONS" ]; then
    echo "1. 파일 권한 점검"
    echo "   [FAIL] 현재 권한: $CURRENT_PERMISSIONS, 허용 권한: $ALLOWED_PERMISSIONS"
    RESULT="Vulnerable"
    ISSUES=$((ISSUES + 1))
else
    echo "1. 파일 권한 점검"
    echo "   [PASS] 현재 권한: $CURRENT_PERMISSIONS"
fi

# 파일 소유자 및 그룹 점검
CURRENT_OWNER=$(stat -c "%U" "$FILE")
CURRENT_GROUP=$(stat -c "%G" "$FILE")
if [ "$CURRENT_OWNER" != "$ALLOWED_OWNER" ] || [ "$CURRENT_GROUP" != "$ALLOWED_GROUP" ]; then
    echo "2. 파일 소유자·그룹 점검"
    echo "   [FAIL] 현재 소유자: $CURRENT_OWNER, 현재 그룹: $CURRENT_GROUP, 허용 소유자: $ALLOWED_OWNER, 허용 그룹: $ALLOWED_GROUP"
    RESULT="Vulnerable"
    ISSUES=$((ISSUES + 1))
else
    echo "2. 파일 소유자·그룹 점검"
    echo "   [PASS] 현재 소유자: $CURRENT_OWNER, 현재 그룹: $CURRENT_GROUP"
fi

# === 점검 결과 요약 ===
echo "=== 점검 결과 요약 ==="
echo "전체 평가: $RESULT"
echo "발견된 문제: $ISSUES개"
if [ "$ISSUES" -gt 0 ]; then
    echo "권장 조치사항: /etc/passwd 파일의 권한 및 소유자/그룹을 확인하고 수정하세요."
fi
```