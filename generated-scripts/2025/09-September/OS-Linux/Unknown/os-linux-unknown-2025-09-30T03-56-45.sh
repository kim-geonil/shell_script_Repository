# ========================================
# NCU Script Generator - Auto Generated Script
# ========================================
#
# Script ID: script_1759204605108_h94hafgie
# Generated: 2025-09-30T03:56:45.236Z
# Script Type: OS-Linux
# Target Product: Unknown
# Generated By: NCU Script Generator User
#
# Configuration:
# - Target OS: 
# - Process Name: 
# - Config Path: 
# - Account Name: 
# - Output Format: bash
#
# Test Results:
# - Status: FAILED
# - Success Rate: 0%
# - Summary: [object Object]
#
# Pass Condition: 
# Fail Condition: 
#
# ========================================

```bash
#!/bin/bash

# === /etc/shadow 소유자·권한 점검 스크립트 ===
# 생성 시간: $(date)
# 설정 적용: 권한 허용값: 600, 640 / 허용 소유자:그룹: root:root, root:shadow

# 점검할 파일 경로
SHADOW_FILE="/etc/shadow"

# 권한 허용값 및 허용 소유자:그룹 설정
ALLOWED_PERMISSIONS=("600" "640")
ALLOWED_OWNERS=("root:root" "root:shadow")

# 점검 결과 초기화
RESULTS=()
ISSUES=0

# 파일 존재 여부 점검
if [[ ! -e $SHADOW_FILE ]]; then
    echo "ERROR: $SHADOW_FILE 파일이 존재하지 않습니다."
    exit 1
fi

# 파일 권한 점검
PERMISSIONS=$(stat -c "%a" $SHADOW_FILE)
if [[ " ${ALLOWED_PERMISSIONS[@]} " =~ " ${PERMISSIONS} " ]]; then
    RESULTS+=("1. 권한 점검: [PASS] 권한이 허용된 값입니다.")
else
    RESULTS+=("1. 권한 점검: [FAIL] 권한이 허용되지 않은 값입니다.")
    ISSUES=$((ISSUES + 1))
fi

# 파일 소유자 및 그룹 점검
OWNER_GROUP=$(stat -c "%U:%G" $SHADOW_FILE)
if [[ " ${ALLOWED_OWNERS[@]} " =~ " ${OWNER_GROUP} " ]]; then
    RESULTS+=("2. 소유자·그룹 점검: [PASS] 소유자 및 그룹이 허용된 값입니다.")
else
    RESULTS+=("2. 소유자·그룹 점검: [FAIL] 소유자 및 그룹이 허용되지 않은 값입니다.")
    ISSUES=$((ISSUES + 1))
fi

# 점검 결과 출력
echo "=== /etc/shadow 소유자·권한 점검 결과 ==="
for result in "${RESULTS[@]}"; do
    echo "$result"
done

# 점검 결과 요약
echo "=== 점검 결과 요약 ==="
if [ $ISSUES -eq 0 ]; then
    echo "전체 평가: Good"
else
    echo "전체 평가: Vulnerable"
    echo "발견된 문제: $ISSUES 개"
    echo "권장 조치사항: 권한 및 소유자·그룹 설정을 확인하고 수정하세요."
fi
```