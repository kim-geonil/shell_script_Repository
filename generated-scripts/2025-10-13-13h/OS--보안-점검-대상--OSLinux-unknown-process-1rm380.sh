# ========================================
# NCU Script Generator - Auto Generated Script
# ========================================
#
# Script ID: detect_99b16bdd-24e3-4ce3-a9da-cbc8615c373a
# Generated: 2025-10-13T04:59:22.777Z
# Asset Type: OS
# Script Type: OS-Linux
# Target Product: 보안 점검 대상
# Generated By: NCU Script Generator User
#
# File Information:
# - File Name: OS--보안-점검-대상--OSLinux-unknown-process.sh
# - Time-based Folder: 2025-10-13-13h
# - Full Path: /2025-10-13-13h/OS--보안-점검-대상--OSLinux-unknown-process.sh
#
# Configuration:
# - Target OS: Linux
# - Process Name: unknown-process
# - Config Path: /etc/default/config
# - Account Name: default-account
# - Output Format: bash
#
# Test Results:
# - Status: FAILED
# - Success Rate: 0%
# - Summary: [object Object]
#
# Pass Condition: Script executed successfully
# Fail Condition: Script execution failed
#
# ========================================

```bash
#!/bin/bash

# === /etc/shadow 소유자·권한 점검 스크립트 ===
# 스크립트 ID: U-08
# 생성 시간: $(date)
# 설정값 요약:
# - 점검 파일: /etc/shadow
# - 허용 권한: 600, 640
# - 허용 소유자:그룹: root:root, root:shadow

# 점검할 파일 경로
FILE="/etc/shadow"

# 허용 권한 및 소유자:그룹 설정
ALLOWED_PERMISSIONS=("600" "640")
ALLOWED_OWNERS=("root:root" "root:shadow")

# 점검 결과 변수 초기화
RESULT="Good"
ISSUES=0

# 파일 존재 여부 점검
if [ ! -e "$FILE" ]; then
    echo "=== 점검 결과 ==="
    echo "점검 시간: $(date)"
    echo "설정 적용: [파일 존재하지 않음]"
    echo "1. 파일 존재 여부"
    echo "[FAIL] /etc/shadow 파일이 존재하지 않습니다."
    echo "=== 점검 결과 요약 ==="
    echo "전체 평가: Vulnerable"
    echo "발견된 문제: 1개"
    echo "권장 조치사항: /etc/shadow 파일이 존재하는지 확인하세요."
    exit 1
fi

# 파일 권한 점검
PERMISSIONS=$(stat -c "%a" "$FILE")
if [[ ! " ${ALLOWED_PERMISSIONS[@]} " =~ " ${PERMISSIONS} " ]]; then
    echo "1. 파일 권한 점검"
    echo "[FAIL] /etc/shadow 파일의 권한이 ${PERMISSIONS}로 설정되어 있습니다. 허용된 권한: ${ALLOWED_PERMISSIONS[*]}"
    RESULT="Vulnerable"
    ISSUES=$((ISSUES + 1))
else
    echo "1. 파일 권한 점검"
    echo "[PASS] /etc/shadow 파일의 권한이 허용된 값(${PERMISSIONS})입니다."
fi

# 파일 소유자 및 그룹 점검
OWNER_GROUP=$(stat -c "%U:%G" "$FILE")
if [[ ! " ${ALLOWED_OWNERS[@]} " =~ " ${OWNER_GROUP} " ]]; then
    echo "2. 파일 소유자 및 그룹 점검"
    echo "[FAIL] /etc/shadow 파일의 소유자:그룹이 ${OWNER_GROUP}로 설정되어 있습니다. 허용된 소유자:그룹: ${ALLOWED_OWNERS[*]}"
    RESULT="Vulnerable"
    ISSUES=$((ISSUES + 1))
else
    echo "2. 파일 소유자 및 그룹 점검"
    echo "[PASS] /etc/shadow 파일의 소유자:그룹이 허용된 값(${OWNER_GROUP})입니다."
fi

# === 점검 결과 요약 ===
echo "=== 점검 결과 요약 ==="
echo "전체 평가: $RESULT"
echo "발견된 문제: $ISSUES 개"
if [ "$ISSUES" -gt 0 ]; then
    echo "권장 조치사항: 파일 권한 및 소유자:그룹을 확인하고 적절히 수정하세요."
else
    echo "권장 조치사항: 모든 설정이 안전합니다."
fi
```