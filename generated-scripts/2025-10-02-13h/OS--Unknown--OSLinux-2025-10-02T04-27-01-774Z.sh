# ========================================
# NCU Script Generator - Auto Generated Script
# ========================================
#
# Script ID: 1eaf8111-7ff0-4193-a488-0fdb845450e3_1759379219953
# Generated: 2025-10-02T04:27:01.774Z
# Asset Type: OS
# Script Type: OS-Linux
# Target Product: Unknown
# Generated By: Script Completion Forcer
#
# File Information:
# - File Name: OS--Unknown--OSLinux.sh
# - Time-based Folder: 2025-10-02-13h
# - Full Path: /2025-10-02-13h/OS--Unknown--OSLinux.sh
#
# Configuration:
# - Target OS: 
# - Process Name: 
# - Config Path: 
# - Account Name: 
# - Output Format: bash
#
# Test Results:
# - Status: FAILED
# - Success Rate: 0%
# - Summary: [object Object]
#
# Pass Condition: 
# Fail Condition: 
#
# ========================================

```bash
#!/bin/bash

# === 패스워드 파일 보호 점검 스크립트 ===
# 스크립트 ID: U-04
# 생성 시간: $(date)
# 설정값 요약:
# - /etc/passwd 경로: /etc/passwd
# - /etc/shadow 경로: /etc/shadow
# - passwd 권한 허용값: 644
# - shadow 권한 허용값: 600, 640

# 점검 시간 기록
echo "=== 패스워드 파일 보호 점검 결과 ==="
echo "점검 시간: $(date)"
echo "설정 적용: /etc/passwd 권한 644, /etc/shadow 권한 600 또는 640"

# 점검 로직 시작

# /etc/passwd 파일 권한 점검
passwd_file="/etc/passwd"
shadow_file="/etc/shadow"
passwd_perms="644"
shadow_perms=("600" "640")

# /etc/passwd 파일 존재 여부 및 권한 점검
if [ -e "$passwd_file" ]; then
    actual_passwd_perms=$(stat -c "%a" "$passwd_file")
    if [ "$actual_passwd_perms" == "$passwd_perms" ]; then
        echo "1. /etc/passwd 파일 권한 점검"
        echo "   [PASS] /etc/passwd 파일의 권한이 $passwd_perms 입니다."
    else
        echo "1. /etc/passwd 파일 권한 점검"
        echo "   [FAIL] /etc/passwd 파일의 권한이 $actual_passwd_perms 입니다. 권장 권한: $passwd_perms"
    fi
else
    echo "1. /etc/passwd 파일 권한 점검"
    echo "   [FAIL] /etc/passwd 파일이 존재하지 않습니다."
fi

# /etc/shadow 파일 존재 여부 및 권한 점검
if [ -e "$shadow_file" ]; then
    actual_shadow_perms=$(stat -c "%a" "$shadow_file")
    if [[ " ${shadow_perms[@]} " =~ " ${actual_shadow_perms} " ]]; then
        echo "2. /etc/shadow 파일 권한 점검"
        echo "   [PASS] /etc/shadow 파일의 권한이 허용된 값 중 하나(${shadow_perms[*]})입니다."
    else
        echo "2. /etc/shadow 파일 권한 점검"
        echo "   [FAIL] /etc/shadow 파일의 권한이 $actual_shadow_perms 입니다. 권장 권한: ${shadow_perms[*]}"
    fi
else
    echo "2. /etc/shadow 파일 권한 점검"
    echo "   [FAIL] /etc/shadow 파일이 존재하지 않습니다."
fi

# 점검 결과 요약
echo "=== 점검 결과 요약 ==="
fail_count=$(grep -c "[FAIL]" <<< "$(cat)")
if [ "$fail_count" -eq 0 ]; then
    echo "전체 평가: Good"
    echo "발견된 문제: 0개"
else
    echo "전체 평가: Vulnerable"
    echo "발견된 문제: $fail_count 개"
    echo "권장 조치사항: /etc/passwd 파일의 권한을 $passwd_perms로, /etc/shadow 파일의 권한을 ${shadow_perms[*]} 중 하나로 설정하세요."
fi
```