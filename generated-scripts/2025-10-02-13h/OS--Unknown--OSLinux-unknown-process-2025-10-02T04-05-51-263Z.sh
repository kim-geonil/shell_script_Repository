# ========================================
# NCU Script Generator - Auto Generated Script
# ========================================
#
# Script ID: legacy-task_1759377950620
# Generated: 2025-10-02T04:05:51.263Z
# Asset Type: OS
# Script Type: OS-Linux
# Target Product: Unknown
# Generated By: NCU Script Generator User
#
# File Information:
# - File Name: OS--Unknown--OSLinux-unknown-process.sh
# - Time-based Folder: 2025-10-02-13h
# - Full Path: /2025-10-02-13h/OS--Unknown--OSLinux-unknown-process.sh
#
# Configuration:
# - Target OS: Linux
# - Process Name: unknown-process
# - Config Path: /etc/default/config
# - Account Name: default-account
# - Output Format: bash
#
# Test Results:
# - Status: FAILED
# - Success Rate: 0%
# - Summary: [object Object]
#
# Pass Condition: Script executed successfully
# Fail Condition: Script execution failed
#
# ========================================

```bash
#!/bin/bash

# === 파일/디렉터리 소유자 설정 점검 스크립트 ===
# ID: U-06
# 카테고리: 파일보안
# 난이도: medium
# 위험도: medium
# 생성 시간: $(date)
# 설정 적용: 중요 파일 목록 - /etc/passwd, /etc/shadow, /etc/group; 허용 소유자:그룹 - root:root

# 점검할 파일 목록
FILES=("/etc/passwd" "/etc/shadow" "/etc/group")
# 허용된 소유자와 그룹
ALLOWED_OWNER="root"
ALLOWED_GROUP="root"

# 점검 결과 초기화
PASS_COUNT=0
FAIL_COUNT=0

# 점검 시작
echo "=== 파일/디렉터리 소유자 설정 점검 결과 ==="
echo "점검 시간: $(date)"
echo "설정 적용: 중요 파일 목록 - ${FILES[*]}; 허용 소유자:그룹 - $ALLOWED_OWNER:$ALLOWED_GROUP"
echo ""

# 파일 소유자 및 그룹 점검
for FILE in "${FILES[@]}"; do
    if [ -e "$FILE" ]; then
        # 파일의 소유자와 그룹을 가져옴
        OWNER=$(stat -c '%U' "$FILE")
        GROUP=$(stat -c '%G' "$FILE")
        
        # 소유자와 그룹이 허용된 값인지 확인
        if [ "$OWNER" == "$ALLOWED_OWNER" ] && [ "$GROUP" == "$ALLOWED_GROUP" ]; then
            echo "1. [$FILE]"
            echo "   [PASS] 소유자와 그룹이 올바르게 설정되어 있습니다."
            PASS_COUNT=$((PASS_COUNT + 1))
        else
            echo "1. [$FILE]"
            echo "   [FAIL] 소유자:그룹이 $OWNER:$GROUP 입니다. 권장: $ALLOWED_OWNER:$ALLOWED_GROUP"
            FAIL_COUNT=$((FAIL_COUNT + 1))
        fi
    else
        echo "1. [$FILE]"
        echo "   [FAIL] 파일이 존재하지 않거나 접근 권한이 없습니다."
        FAIL_COUNT=$((FAIL_COUNT + 1))
    fi
done

# 점검 결과 요약
echo ""
echo "=== 점검 결과 요약 ==="
if [ $FAIL_COUNT -eq 0 ]; then
    echo "전체 평가: Good"
else
    echo "전체 평가: Vulnerable"
fi
echo "발견된 문제: $FAIL_COUNT 개"
if [ $FAIL_COUNT -gt 0 ]; then
    echo "권장 조치사항: 파일의 소유자와 그룹을 $ALLOWED_OWNER:$ALLOWED_GROUP 로 설정하세요."
fi
```