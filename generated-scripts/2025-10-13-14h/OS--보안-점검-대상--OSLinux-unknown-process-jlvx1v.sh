# ========================================
# NCU Script Generator - Auto Generated Script
# ========================================
#
# Script ID: detect_bd9969e7-7ee0-4a88-8013-5f1c0d42c90c
# Generated: 2025-10-13T05:20:29.863Z
# Asset Type: OS
# Script Type: OS-Linux
# Target Product: 보안 점검 대상
# Generated By: NCU Script Generator User
#
# File Information:
# - File Name: OS--보안-점검-대상--OSLinux-unknown-process.sh
# - Time-based Folder: 2025-10-13-14h
# - Full Path: /2025-10-13-14h/OS--보안-점검-대상--OSLinux-unknown-process.sh
#
# Configuration:
# - Target OS: Linux
# - Process Name: unknown-process
# - Config Path: /etc/default/config
# - Account Name: default-account
# - Output Format: bash
#
# Test Results:
# - Status: FAILED
# - Success Rate: 0%
# - Summary: [object Object]
#
# Pass Condition: Script executed successfully
# Fail Condition: Script execution failed
#
# ========================================

```bash
#!/bin/bash

# === Root 계정 원격 접속 제한 점검 스크립트 ===
# ID: U-01
# 카테고리: 계정관리
# 생성 시간: $(date)
# 설정값 요약:
# SSH 설정 파일 경로: /etc/ssh/sshd_config
# PAM 로그인 설정 파일 경로: /etc/pam.d/login
# securetty 파일 경로: /etc/securetty

# 점검 결과 변수 초기화
result=0
issues=0
report=""

# 점검 함수 정의
check_file() {
    if [[ -f "$1" ]]; then
        echo "파일 존재: $1"
        return 0
    else
        echo "파일 없음: $1"
        return 1
    fi
}

# 1. SSH 설정 파일 점검
ssh_config="/etc/ssh/sshd_config"
if check_file "$ssh_config"; then
    if grep -q "^PermitRootLogin no" "$ssh_config"; then
        report+="1. SSH 설정: [PASS] root 로그인 제한 설정됨\n"
    else
        report+="1. SSH 설정: [FAIL] root 로그인 제한 미설정\n"
        issues=$((issues + 1))
    fi
else
    report+="1. SSH 설정: [FAIL] 파일 없음\n"
    issues=$((issues + 1))
fi

# 2. PAM 로그인 설정 점검
pam_login="/etc/pam.d/login"
if check_file "$pam_login"; then
    if grep -q "auth required pam_securetty.so" "$pam_login"; then
        report+="2. PAM 로그인 설정: [PASS] 보안 tty 설정됨\n"
    else
        report+="2. PAM 로그인 설정: [FAIL] 보안 tty 설정 미설정\n"
        issues=$((issues + 1))
    fi
else
    report+="2. PAM 로그인 설정: [FAIL] 파일 없음\n"
    issues=$((issues + 1))
fi

# 3. securetty 파일 점검
securetty_file="/etc/securetty"
if check_file "$securetty_file"; then
    if grep -q "^tty[0-9]" "$securetty_file"; then
        report+="3. securetty 설정: [PASS] tty 설정됨\n"
    else
        report+="3. securetty 설정: [FAIL] tty 설정 미설정\n"
        issues=$((issues + 1))
    fi
else
    report+="3. securetty 설정: [FAIL] 파일 없음\n"
    issues=$((issues + 1))
fi

# 결과 리포트 출력
echo -e "=== Root 계정 원격 접속 제한 점검 결과 ==="
echo -e "점검 시간: $(date)"
echo -e "설정 적용: [SSH 설정, PAM 로그인 설정, securetty 파일]\n"
echo -e "$report"

# 점검 결과 요약
if [[ $issues -eq 0 ]]; then
    overall_status="Good"
else
    overall_status="Vulnerable"
fi

echo -e "=== 점검 결과 요약 ==="
echo -e "전체 평가: $overall_status"
echo -e "발견된 문제: $issues 개"
if [[ $issues -gt 0 ]]; then
    echo -e "권장 조치사항: root 로그인 제한을 설정하고, PAM 및 securetty 설정을 검토하세요."
fi
```