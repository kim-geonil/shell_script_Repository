# ========================================
# NCU Script Generator - Auto Generated Script
# ========================================
#
# Script ID: detect_9eab410d-8ff7-4043-a09c-816ef6efbd81
# Generated: 2025-10-12T14:47:13.803Z
# Asset Type: OS
# Script Type: OS-Linux
# Target Product: 보안 점검 대상
# Generated By: NCU Script Generator User
#
# File Information:
# - File Name: OS--보안-점검-대상--OSLinux-unknown-process.sh
# - Time-based Folder: 2025-10-12-23h
# - Full Path: /2025-10-12-23h/OS--보안-점검-대상--OSLinux-unknown-process.sh
#
# Configuration:
# - Target OS: Linux
# - Process Name: unknown-process
# - Config Path: /etc/default/config
# - Account Name: default-account
# - Output Format: bash
#
# Test Results:
# - Status: FAILED
# - Success Rate: 0%
# - Summary: [object Object]
#
# Pass Condition: Script executed successfully
# Fail Condition: Script execution failed
#
# ========================================

```bash
#!/bin/bash

# === 파일/디렉터리 소유자 설정 점검 스크립트 ===
# 스크립트 ID: U-06
# 생성 시간: $(date)
# 설정값 요약: 중요 파일 목록 (/etc/passwd, /etc/shadow, /etc/group), 허용 소유자:그룹 (root:root)

# 점검할 파일 목록
files=("/etc/passwd" "/etc/shadow" "/etc/group")
# 허용 소유자 및 그룹
allowed_owner="root"
allowed_group="root"

# 결과 변수 초기화
result=0
report=""

# 점검 로직
for file in "${files[@]}"; do
    # 파일 존재 여부 확인
    if [[ -e "$file" ]]; then
        # 파일 소유자 및 그룹 확인
        owner=$(stat -c "%U" "$file")
        group=$(stat -c "%G" "$file")
        
        # 소유자 및 그룹이 허용된 값과 일치하는지 확인
        if [[ "$owner" == "$allowed_owner" && "$group" == "$allowed_group" ]]; then
            report+="1. $file\n   [PASS] 소유자: $owner, 그룹: $group\n"
        else
            report+="1. $file\n   [FAIL] 소유자: $owner, 그룹: $group\n"
            result=1
        fi
    else
        report+="1. $file\n   [FAIL] 파일이 존재하지 않음\n"
        result=1
    fi
done

# 결과 리포트 출력
echo -e "=== 파일/디렉터리 소유자 설정 점검 결과 ==="
echo -e "점검 시간: $(date)"
echo -e "설정 적용: 중요 파일 목록: ${files[*]}, 허용 소유자:그룹: $allowed_owner:$allowed_group\n"
echo -e "$report"

# 요약 섹션
if [[ $result -eq 0 ]]; then
    overall_status="Good"
    issues_found=0
    recommendations="모든 파일의 소유자 및 그룹이 올바르게 설정되어 있습니다."
else
    overall_status="Vulnerable"
    issues_found=$(echo -e "$report" | grep -c "\[FAIL\]")
    recommendations="소유자 및 그룹을 'root:root'로 변경하십시오."
fi

echo -e "=== 점검 결과 요약 ==="
echo -e "전체 평가: $overall_status"
echo -e "발견된 문제: $issues_found 개"
echo -e "권장 조치사항: $recommendations"
```